{"ts":1353176056736,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"ï»¿/// <reference path=\"Ark.js\" />\n\n\nAveds.AjaxSocket = Aveds.AjaxSocket || {};\n\nAveds.AjaxSocket.ArkHandler = \"http://192.168.0.108:4986/Handler/ArkHandler.ashx\";\n\nAveds.AjaxSocket.LocalHandler = \"Handler.ashx\";\n\nAveds.AjaxSocket.Socket = function () {\n    this.Open = Aveds.AjaxSocket.Open;\n    this.Close = Aveds.AjaxSocket.Close;\n    this.Send = Aveds.AjaxSocket.Send;\n    this.SendEvent = Aveds.AjaxSocket.SendEvent;\n    this.Receive = Aveds.AjaxSocket.Receive;\n    this.ReceiveEvent = Aveds.AjaxSocket.ReceiveEvent;\n    this.ReceiveErrorEvent = Aveds.AjaxSocket.ReceiveErrorEvent;\n    this.ReceiveHistory = Aveds.AjaxSocket.ReceiveHistory;\n    this.SocketId = Aveds.AjaxSocket.GUID();\n    this.Sid = 0;\n    this.ArkId = 0;\n    this.GUID = Aveds.AjaxSocket.GUID;\n    this.Status = 0; /// 0 = Closed, 1 = Opened, 2 = Alive\n};\n\nAveds.AjaxSocket.Open = function () {\n    var ark = new Aveds.Ark.AvedsArk(Aveds.AjaxSocket.ArkHandler, Aveds.AjaxSocket.LocalHandler);\n    var Rqu_A = new ark.Rqu_Ark();\n    Rqu_A.ArkId = ark.GUID();\n    Rqu_A.Data = \"{'SocketId': '\" + this.SocketId + \"'}\";\n    Rqu_A.InterfaceId = 21;\n    Rqu_A.Function = \"Open\";\n    Rqu_A.Sid = this.Sid;\n    var Rsp_A = new ark.Rsp_Ark(ark.SendArk(Rqu_A));\n    if (Rsp_A.Success) {\n        if (Rsp_A.Data.Success) {\n            this.Status = 1;\n            this.Receive(Rsp_A, this);\n        }\n    }\n};\n\nAveds.AjaxSocket.Close = function () {\n    this.Status = 0;\n};\n\nAveds.AjaxSocket.Send = function (SocketData) {\n    var ark = function () { };\n    ark.prototype = new Aveds.Ark.AvedsArk(Aveds.AjaxSocket.ArkHandler, Aveds.AjaxSocket.LocalHandler);\n    ark.prototype.MainObj = this;\n    var Rqu_A = new ark.prototype.Rqu_Ark();\n    Rqu_A.ArkId = ark.prototype.GUID();\n    Rqu_A.Data = \"{'SocketId':'\" + this.SocketId + \"','SocketData':'\" + SocketData + \"'}\";\n    Rqu_A.InterfaceId = 21;\n    Rqu_A.Function = \"Send\";\n    Rqu_A.Sid = this.Sid;\n\n\n\n    ark.prototype.SendArk = function (Rqu_Ark, eventFunction, MainObj) {\n        var ArkStr = this.Rqu_ArkToStr(Rqu_Ark);\n        var a = [];\n        a[0] = ArkStr;\n        var aj = function () { };\n        aj.prototype = new AjaxProxy(a, this.AjaxProxyHandler, this.AvedsArkHandler);\n        aj.prototype.MainObj = MainObj;\n\n\n        aj.prototype.PostAsyncRequest = function (eventFunction) {\n            if (eventFunction == null) {\n                alert(\"PostAsyncRequest(eventFunction) required 1 parameter\");\n            }\n            else {\n                this.xmlHttp = this.CheckAjaxSupport();\n                if (this.xmlHttp == null) {\n                    alert(\"Your browser does not support AJAX!\");\n                    return;\n                }\n                var i;\n                var q = \"q=\" + this.proxyPage;\n                for (i in this.array) {\n                    q = q + \"&q\" + i + \"=\" + escape(this.array[i]);\n                }\n                var url = this.page;\n                url = url + \"?sid=\" + Math.random();\n                var xh = function () { };\n                xh.prototype = this.xmlHttp;\n                xh.prototype.MainObj = this.MainObj;\n                xh.prototype.onreadystatechange = function () {\n                    if (xh.prototype.readyState == 4 && xh.prototype.status == 200) {\n                        eventFunction(xh.prototype.responseText, xh.prototype.MainObj);\n                    }\n                }\n                this.xmlHttp.open(\"POST\", url, true);\n                this.xmlHttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                this.xmlHttp.send(q);\n            }\n        }\n        if (eventFunction) {\n            aj.prototype.PostAsyncRequest(eventFunction);\n        }\n        else {\n            return eval(\"(\" + aj.prototype.PostRequest() + \")\");\n        }\n    }\n\n    ark.prototype.SendArk(Rqu_A, this.SendEvent, this);\n};\n\nAveds.AjaxSocket.SendEvent = function (e, MainObj) {\n    var stop = e;\n\n};\n\nAveds.AjaxSocket.Receive = function (e, MainObj) {\n    if (MainObj.Status != 0) {\n        MainObj.Status = 2;\n        MainObj.ReceiveEvent(e, MainObj);\n        var ark = function () { };\n        ark.prototype = new Aveds.Ark.AvedsArk(Aveds.AjaxSocket.ArkHandler, Aveds.AjaxSocket.LocalHandler);\n        ark.prototype.MainObj = MainObj;\n        var Rqu_A = new ark.prototype.Rqu_Ark();\n        if (MainObj.ArkId == 0) {\n            MainObj.ArkId = ark.prototype.GUID();\n        }\n        Rqu_A.ArkId = MainObj.ArkId; //MainObj.SocketId; //ark.prototype.GUID();\n        Rqu_A.Data = \"{'SocketId': '\" + MainObj.SocketId + \"' }\";\n        Rqu_A.InterfaceId = 21;\n        Rqu_A.Function = \"Receive\";\n        Rqu_A.Watcher = true;\n        Rqu_A.WatcherTimer = 1000;\n        Rqu_A.Sid = MainObj.Sid;\n\n\n        ark.prototype.SendArk = function (Rqu_Ark, eventFunction, MainObj) {\n            var ArkStr = this.Rqu_ArkToStr(Rqu_Ark);\n            var a = [];\n            a[0] = ArkStr;\n            var aj = function () { };\n            aj.prototype = new AjaxProxy(a, this.AjaxProxyHandler, this.AvedsArkHandler);\n            aj.prototype.MainObj = MainObj;\n\n\n            aj.prototype.PostAsyncRequest = function (eventFunction) {\n                if (eventFunction == null) {\n                    alert(\"PostAsyncRequest(eventFunction) required 1 parameter\");\n                }\n                else {\n                    this.xmlHttp = this.CheckAjaxSupport();\n                    if (this.xmlHttp == null) {\n                        alert(\"Your browser does not support AJAX!\");\n                        return;\n                    }\n                    var i;\n                    var q = \"q=\" + this.proxyPage;\n                    for (i in this.array) {\n                        q = q + \"&q\" + i + \"=\" + escape(this.array[i]);\n                    }\n                    var url = this.page;\n                    url = url + \"?sid=\" + Math.random();\n                    var xh = function () { };\n                    xh.prototype = this.xmlHttp;\n                    xh.prototype.MainObj = this.MainObj;\n                    xh.prototype.onreadystatechange = function () {\n                        if (xh.prototype.readyState == 4) {\n                            if (xh.prototype.status == 200) {\n                                eventFunction(xh.prototype.responseText, xh.prototype.MainObj);\n                            }\n                            else {\n                                xh.prototype.MainObj.ReceiveErrorEvent(xh.prototype, xh.prototype.MainObj);\n                                return;\n                            }\n                        }\n                    }\n                    this.xmlHttp.open(\"POST\", url, true);\n                    this.xmlHttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                    this.xmlHttp.send(q);\n                }\n            }\n\n\n            if (eventFunction) {\n                aj.prototype.PostAsyncRequest(eventFunction);\n            }\n            else {\n                return eval(\"(\" + aj.prototype.PostRequest() + \")\");\n            }\n        }\n\n        ark.prototype.SendArk(Rqu_A, MainObj.Receive, MainObj);\n\n\n    }\n};\n\nAveds.AjaxSocket.ReceiveErrorEvent = function (e, MainObj) {\n\n}\n\nAveds.AjaxSocket.ReceiveEvent = function (e, MainObj) {\n    var stop = e;\n};\n\nAveds.AjaxSocket.ReceiveHistory = function (BeginIndex, EndIndex) {\n    var ark = function () { };\n    ark.prototype = new Aveds.Ark.AvedsArk(Aveds.AjaxSocket.ArkHandler, Aveds.AjaxSocket.LocalHandler);\n    ark.prototype.MainObj = this;\n    var Rqu_A = new ark.prototype.Rqu_Ark();\n    Rqu_A.ArkId = ark.prototype.GUID();\n    Rqu_A.Data = \"{'SocketId':'\" + this.SocketId + \"','BeginIndex':'\" + BeginIndex + \"','EndIndex':'\" + EndIndex + \"'}\";\n    Rqu_A.InterfaceId = 21;\n    Rqu_A.Function = \"ReceiveHistoryData\";\n    Rqu_A.Sid = this.Sid;\n\n\n\n    ark.prototype.SendArk = function (Rqu_Ark, eventFunction, MainObj) {\n        var ArkStr = this.Rqu_ArkToStr(Rqu_Ark);\n        var a = [];\n        a[0] = ArkStr;\n        var aj = function () { };\n        aj.prototype = new AjaxProxy(a, this.AjaxProxyHandler, this.AvedsArkHandler);\n        aj.prototype.MainObj = MainObj;\n\n\n        aj.prototype.PostAsyncRequest = function (eventFunction) {\n            if (eventFunction == null) {\n                alert(\"PostAsyncRequest(eventFunction) required 1 parameter\");\n            }\n            else {\n                this.xmlHttp = this.CheckAjaxSupport();\n                if (this.xmlHttp == null) {\n                    alert(\"Your browser does not support AJAX!\");\n                    return;\n                }\n                var i;\n                var q = \"q=\" + this.proxyPage;\n                for (i in this.array) {\n                    q = q + \"&q\" + i + \"=\" + escape(this.array[i]);\n                }\n                var url = this.page;\n                url = url + \"?sid=\" + Math.random();\n                var xh = function () { };\n                xh.prototype = this.xmlHttp;\n                xh.prototype.MainObj = this.MainObj;\n                xh.prototype.onreadystatechange = function () {\n                    if (xh.prototype.readyState == 4 && xh.prototype.status == 200) {\n                        eventFunction(xh.prototype.responseText, xh.prototype.MainObj);\n                    }\n                }\n                this.xmlHttp.open(\"POST\", url, true);\n                this.xmlHttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n                this.xmlHttp.send(q);\n            }\n        }\n        if (eventFunction) {\n            aj.prototype.PostAsyncRequest(eventFunction);\n        }\n        else {\n            return eval(\"(\" + aj.prototype.PostRequest() + \")\");\n        }\n    }\n\n    ark.prototype.SendArk(Rqu_A, this.ReceiveHistoryEvent, this);\n}\n\nAveds.AjaxSocket.ReceiveHistoryEvent = function (e, MainObj) {\n    var stop = e;\n}\n\nAveds.AjaxSocket.GUID = function () {\n    var result, i, j;\n    result = '';\n    for (j = 0; j < 32; j++) {\n        if (j == 8 || j == 12 || j == 16 || j == 20)\n            result = result + '-';\n        i = Math.floor(Math.random() * 16).toString(16).toUpperCase();\n        result = result + i;\n    }\n    return result\n}\n\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":10160}]],"length":10160}
{"contributors":[],"silentsave":false,"ts":1353176064664,"patch":[[{"diffs":[[-1,"ï»¿"],[0,"/// "]],"start1":0,"start2":0,"length1":5,"length2":4},{"diffs":[[0,".js\" />\n"],[1,"//asdasdasda//"],[0,"\n\nAveds."]],"start1":24,"start2":24,"length1":16,"length2":30}]],"length":10173,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353221837838,"patch":[[{"diffs":[[0,"asda//\n\n"],[1,"var Aveds = Aveds || {};\n\n "],[0,"Aveds.Aj"]],"start1":40,"start2":40,"length1":16,"length2":43}]],"length":10200,"saved":false}
{"ts":1353221861755,"patch":[[{"diffs":[[0,"|| {};\n\n"],[1,"\n\n"],[0," Aveds.A"]],"start1":66,"start2":66,"length1":16,"length2":18}]],"length":10202,"saved":false}
